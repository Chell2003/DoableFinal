@model DoableFinal.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Admin Profile";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h1 class="h3">Admin Profile</h1>
            <p class="text-muted">Manage your profile settings</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <form asp-action="Profile" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="FirstName" class="form-label"></label>
                                <input asp-for="FirstName" class="form-control" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="LastName" class="form-label"></label>
                                <input asp-for="LastName" class="form-control" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" readonly />
                        </div>

                        <div class="mb-3">
                            <label asp-for="Role" class="form-label"></label>
                            <input asp-for="Role" class="form-control" readonly />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Change Password</h5>
                </div>
                <div class="card-body">
                    @if (TempData["PasswordSuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["PasswordSuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["PasswordErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["PasswordErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <form asp-action="ChangePassword" method="post" id="changePasswordForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <div class="input-group">
                                <input type="password" id="currentPassword" name="currentPassword" class="form-control" required />
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('currentPassword', this)"><i class="bi bi-eye"></i></button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <div class="input-group">
                                <input type="password" id="newPassword" name="newPassword" class="form-control" 
                                       required pattern="^(?=.*[A-Z])(?=.*[a-zA-Z0-9]).{6,}$" 
                                       title="Password must be at least 6 characters long and contain at least one capital letter" />
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('newPassword', this)">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <small class="text-muted">Password must be at least 6 characters long and contain at least one capital letter</small>
                            <div id="passwordStrength" class="mt-1"></div>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <div class="input-group">
                                <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required />
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('confirmPassword', this)">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <div id="confirmPasswordFeedback" class="invalid-feedback"></div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-warning">
                                <i class="bi bi-key"></i> Change Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Account Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label text-muted">Account Status</label>
                        <div>
                            <span class="badge bg-success">Active</span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Member Since</label>
                        <div>@Model.CreatedAt.ToString("MMMM dd, yyyy")</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Last Login</label>
                        <div>@(Model.LastLoginAt?.ToString("MMMM dd, yyyy HH:mm") ?? "Never")</div>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Security Settings</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="twoFactorAuth">
                            <label class="form-check-label" for="twoFactorAuth">Two-Factor Authentication</label>
                        </div>
                        <small class="text-muted">Enable two-factor authentication for enhanced security.</small>
                    </div>

                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="emailNotifications" checked>
                            <label class="form-check-label" for="emailNotifications">Email Notifications</label>
                        </div>
                        <small class="text-muted">Receive email notifications for important updates.</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            // Password strength indicator
            $('#newPassword').on('input', function() {
                var password = $(this).val();
                var strength = 0;
                var feedback = [];

                // Length check
                if (password.length >= 6) {
                    strength += 1;
                } else {
                    feedback.push('At least 6 characters');
                }

                // Capital letter check
                if (password.match(/[A-Z]/)) {
                    strength += 1;
                } else {
                    feedback.push('At least one capital letter');
                }

                // Update password strength indicator
                var strengthDiv = $('#passwordStrength');
                strengthDiv.removeClass('text-danger text-warning text-success');
                
                if (strength === 0) {
                    strengthDiv.html('Weak password').addClass('text-danger');
                } else if (strength === 1) {
                    strengthDiv.html('Moderate password').addClass('text-warning');
                } else {
                    strengthDiv.html('Strong password').addClass('text-success');
                }

                if (feedback.length > 0) {
                    strengthDiv.html(feedback.join(', '));
                }
            });

            // Password confirmation match check
            $('#confirmPassword').on('input', function() {
                var newPassword = $('#newPassword').val();
                var confirmPassword = $(this).val();
                var feedback = $('#confirmPasswordFeedback');

                if (newPassword !== confirmPassword) {
                    feedback.text('Passwords do not match').addClass('d-block');
                    $(this).addClass('is-invalid');
                } else {
                    feedback.text('').removeClass('d-block');
                    $(this).removeClass('is-invalid');
                }
            });

            // Form submission validation
            $('#changePasswordForm').on('submit', function(e) {
                var newPassword = $('#newPassword').val();
                var confirmPassword = $('#confirmPassword').val();
                var currentPassword = $('#currentPassword').val();

                if (!currentPassword) {
                    $('#currentPasswordFeedback').text('Current password is required').addClass('d-block');
                    $('#currentPassword').addClass('is-invalid');
                    e.preventDefault();
                    return false;
                }

                if (newPassword !== confirmPassword) {
                    $('#confirmPasswordFeedback').text('Passwords do not match').addClass('d-block');
                    $('#confirmPassword').addClass('is-invalid');
                    e.preventDefault();
                    return false;
                }

                return true;
            });
        });

        // Password visibility toggle
        function togglePasswordVisibility(fieldId, btn) {
            var input = document.getElementById(fieldId);
            var icon = btn.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }
    </script>
} 