@model DoableFinal.Models.ProjectTask

@{
    ViewData["Title"] = "Task Details";
    var dateFormat = "MMM dd, yyyy";
    var dateTimeFormat = "MMM dd, yyyy HH:mm";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Task Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Admin" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-controller="Admin" asp-action="Tasks">Tasks</a></li>
        <li class="breadcrumb-item active">Task Details</li>
    </ol>

    <div class="row">
        <div class="col-xl-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-tasks me-1"></i>
                        Task Information
                    </div>
                    <div>
                        <a asp-controller="Admin" asp-action="EditTask" asp-route-id="@Model.Id" class="btn btn-primary btn-sm">
                            <i class="fas fa-edit"></i> Edit Task
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Title:</div>
                        <div class="col-md-9">@Model.Title</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Description:</div>
                        <div class="col-md-9">@Model.Description</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Project:</div>
                        <div class="col-md-9">
                            <a asp-controller="Admin" asp-action="ProjectDetails" asp-route-id="@Model.ProjectId">@Model.Project.Name</a>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Assigned To:</div>
                        <div class="col-md-9">
                            @foreach (var assignment in Model.TaskAssignments)
                            {
                                <span>@assignment.Employee.FirstName</span><br />
                            }
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Status:</div>
                        <div class="col-md-9">
                            <span class="badge bg-@(Model.Status switch {
                                "Not Started" => "secondary",
                                "In Progress" => "primary",
                                "Pending Approval" => "info",
                                "On Hold" => "warning",
                                "Completed" => "success",
                                _ => "secondary"
                            })">@Model.Status</span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Priority:</div>
                        <div class="col-md-9">
                            <span class="badge bg-@(Model.Priority switch {
                                "Low" => "info",
                                "Medium" => "warning",
                                "High" => "danger",
                                _ => "secondary"
                            })">@Model.Priority</span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Start Date:</div>
                        <div class="col-md-9">@Model.StartDate.ToString(dateFormat)</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Due Date:</div>
                        <div class="col-md-9">
                            <span class="@(Model.DueDate < DateTime.Now && Model.Status != "Completed" ? "text-danger" : "")">
                                @Model.DueDate.ToString(dateFormat)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Created:</div>
                        <div class="col-md-9">@Model.CreatedAt.ToString(dateTimeFormat)</div>
                    </div>
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <div class="row mb-3">
                            <div class="col-md-3 fw-bold">Last Updated:</div>
                            <div class="col-md-9">@Model.UpdatedAt.Value.ToString(dateTimeFormat)</div>
                        </div>
                    }
                    

                    @if (!string.IsNullOrEmpty(Model.ProofFilePath))
                    {
                        <div class="row mb-3">
                            <div class="col-md-3 fw-bold">Task Proof:</div>
                            <div class="col-md-9">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <a href="@Url.Content(Model.ProofFilePath)" class="btn btn-secondary btn-sm" target="_blank">
                                                <i class="fas fa-download"></i> View Submitted Proof
                                            </a>
                                        </div>

                                        @if (!Model.IsConfirmed && Model.Status != "Completed")
                                        {
                                            <form asp-action="ApproveTaskProof" asp-controller="Admin" method="post">
                                                <input type="hidden" name="taskId" value="@Model.Id" />
                                                <button type="submit" class="btn btn-success">
                                                    <i class="fas fa-check-circle"></i> Approve Proof and Complete Task
                                                </button>
                                            </form>
                                        }
                                        else if (Model.IsConfirmed)
                                        {
                                            <div class="alert alert-success mb-0">
                                                <i class="fas fa-check-circle"></i> Proof verified and task completed
                                                @if (Model.CompletedAt.HasValue)
                                                {
                                                    <br/>
                                                    <small class="text-muted">Completed on @Model.CompletedAt.Value.ToString(dateTimeFormat)</small>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-comments me-1"></i>
                    Comments
                </div>
                <div class="card-body">
                    @if (User.IsInRole("Admin") || Model.TaskAssignments.Any(a => a.Employee.Email == User.Identity.Name) || User.Identity.Name == Model.Project.ProjectManager.Email || User.Identity.Name == Model.Project.Client.Email)
                    {
                        <form asp-action="AddComment" method="post">
                            <input type="hidden" name="taskId" value="@Model.Id" />
                            <div class="mb-3">
                                <textarea name="commentText" class="form-control" placeholder="Add a comment..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Post Comment</button>
                        </form>
                        <hr />
                    }
                    <ul class="list-group">
                        @foreach (var comment in Model.Comments)
                        {
                            <li class="list-group-item">
                                <strong>@comment.CreatedBy.FirstName @comment.CreatedBy.LastName</strong>
                                <br />
                                <small class="text-muted">@comment.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                                <p>@comment.CommentText</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Gantt Chart -->
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Task Timeline
                </div>
                <div class="card-body">
                    <div id="taskGanttChart"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.41.0/dist/apexcharts.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var options = {
                series: [{
                    data: [{
                        x: "@Model.Title",
                        y: [
                            new Date("@Model.StartDate.ToString("yyyy-MM-dd")").getTime(),
                            new Date("@Model.DueDate.ToString("yyyy-MM-dd")").getTime()
                        ],
                        fillColor: '@(Model.Status switch {
                            "Completed" => "#198754",
                            "In Progress" => "#0d6efd",
                            "On Hold" => "#ffc107",
                            _ => "#6c757d"
                        })'
                    }]
                }],
                chart: {
                    height: 350,
                    type: 'rangeBar'
                },
                plotOptions: {
                    bar: {
                        horizontal: true
                    }
                },
                xaxis: {
                    type: 'datetime'
                }
            };

            var chart = new ApexCharts(document.querySelector("#taskGanttChart"), options);
            chart.render();
        });
    </script>
}