@model IEnumerable<DoableFinal.Models.Notification>
@{
    ViewData["Title"] = "Notifications";
    Layout = "_ClientLayout";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h1 class="h3">Notifications</h1>
            <p class="text-muted">View your project and task notifications</p>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center py-4">
                    <i class="bi bi-bell text-muted fs-1"></i>
                    <p class="text-muted mt-2">No notifications yet</p>
                </div>
            }
            else
            {
                <div class="list-group">
                    @foreach (var notification in Model)
                    {
                            // Pre-resolve the link so the markup below can simply reference `resolvedLink`.
                            string resolvedLink = null;
                            if (!string.IsNullOrEmpty(notification.Link))
                            {
                                var rawLink = notification.Link.Trim();
                                resolvedLink = rawLink;
                                if (rawLink.Contains("/Ticket/Details", StringComparison.OrdinalIgnoreCase))
                                {
                                    var parts = rawLink.TrimEnd('/').Split('/');
                                    var last = parts.LastOrDefault();
                                    if (int.TryParse(last, out var ticketId))
                                    {
                                        resolvedLink = Url.Action("TicketDetails", "Client", new { id = ticketId }) ?? rawLink;
                                    }
                                }
                            }

                        <div class="list-group-item @(!notification.IsRead ? "bg-light" : "")">
                            <div class="d-flex w-100 justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">@notification.Title</h6>
                                    <p class="mb-1">@notification.Message</p>
                                    <small class="text-muted">
                                        @notification.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                    </small>
                                </div>
                                <div class="d-flex gap-2">
                                    @if (!string.IsNullOrEmpty(resolvedLink))
                                    {
                                        <a href="@resolvedLink" class="btn btn-sm btn-primary">
                                            View Details
                                        </a>
                                    }
                                    @if (!notification.IsRead)
                                    {
                                        <form asp-action="MarkNotificationAsRead" method="post">
                                            <input type="hidden" name="id" value="@notification.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-secondary">
                                                Mark as Read
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>



