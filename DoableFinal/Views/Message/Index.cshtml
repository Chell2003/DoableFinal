@model IEnumerable<DoableFinal.Models.Message>

@{
    ViewData["Title"] = "Messages";
}

<div class="container-fluid">
    <div class="row">        <!-- Message List Sidebar -->
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Conversations</h5>
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#newMessageModal">
                            <i class="bi bi-plus-lg"></i> New Message
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">                            <div class="list-group list-group-flush" style="height: calc(100vh - 250px); overflow-y: auto;">
                                @{
                                    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                                }

                                @if (ViewBag.UsersWithMessages != null)
                                {
                                    foreach (var conv in ViewBag.UsersWithMessages)
                                    {
                                        <div class="conversation-item p-3 border-bottom @(conv.UnreadCount > 0 ? "bg-light" : "")" 
                                             style="cursor: pointer;" 
                                             onclick="loadConversation('@conv.UserId')">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle me-3">
                                                    @(conv.User.FirstName[0] + conv.User.LastName[0])
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <h6 class="mb-0">@conv.User.FirstName @conv.User.LastName</h6>
                                                        <small class="text-muted">@conv.LastMessage.CreatedAt.ToString("MMM dd")</small>
                                                    </div>
                                                    <p class="mb-0 text-truncate" style="max-width: 200px;">
                                                        @(conv.LastMessage.SenderId == currentUserId ? "You: " : "")@conv.LastMessage.Content
                                                    </p>
                                                </div>
                                                @if (conv.UnreadCount > 0)
                                                {
                                                    <span class="badge bg-primary rounded-pill ms-2">@conv.UnreadCount</span>
                                                }
                                            </div>
                                        </div>
                                    }                                }
                                
                                @foreach (var user in ViewBag.UsersWithoutMessages)
                                {
                                    <div class="conversation-item p-3 border-bottom" 
                                         style="cursor: pointer;" 
                                         onclick="loadConversation('@user.Id')">
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-3">
                                                @(user.FirstName[0])
                                            </div>
                                            <div class="flex-grow-1">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h6 class="mb-0">@user.FirstName @user.LastName</h6>
                                                </div>
                                                <p class="mb-0 text-muted">No messages yet</p>
                                            </div>
                                        </div>
                                    </div>
                                }                            </div>
                </div>
            </div>
        </div>

        <!-- Message Content Area -->
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <div id="conversationContent" class="d-flex flex-column" style="height: calc(100vh - 250px);">
                        <div class="text-center py-5 text-muted">
                            <i class="bi bi-chat-dots display-1"></i>
                            <p class="mt-3">Select a conversation to view messages</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- New Message Modal -->
<div class="modal fade" id="newMessageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">New Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form asp-action="SendMessage" method="post" class="needs-validation" novalidate>
                    <div class="mb-3">
                        <label for="receiverId" class="form-label">To:</label>
                        <select name="receiverId" id="receiverId" class="form-select" required>
                            <option value="">Select recipient...</option>                            @if (ViewBag.UsersWithoutMessages != null)
                            {
                                foreach (var user in ViewBag.UsersWithoutMessages)
                                {
                                    <option value="@user.Id">@user.FirstName @user.LastName</option>
                                }
                            }
                            @if (ViewBag.UsersWithMessages != null)
                            {
                                foreach (var conv in ViewBag.UsersWithMessages)
                                {
                                    <option value="@conv.UserId">@conv.User.FirstName @conv.User.LastName</option>
                                }
                            }
                        </select>
                        <div class="invalid-feedback">Please select a recipient.</div>
                    </div>
                    <div class="mb-3">
                        <label for="projectId" class="form-label">Project (Optional):</label>
                        <select name="projectId" id="projectId" class="form-select">
                            <option value="">Select project...</option>
                            @foreach (var project in ViewBag.Projects)
                            {
                                <option value="@project.Id">@project.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="content" class="form-label">Message:</label>
                        <textarea name="content" id="content" class="form-control" rows="4" required 
                                placeholder="Type your message here..."></textarea>
                        <div class="invalid-feedback">Please enter a message.</div>
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send me-1"></i> Send Message
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()

        let currentUserId = null;

        function loadConversation(userId) {
            currentUserId = userId;
            const content = document.getElementById('conversationContent');
            content.innerHTML = `
                <div class="conversation-header p-3 border-bottom">
                    <h5 class="mb-0">Loading conversation...</h5>
                </div>
                <div class="conversation-messages p-3 flex-grow-1" style="overflow-y: auto;">
                    <div class="text-center py-5 text-muted">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            `;

            refreshConversation(userId);
        }

        function refreshConversation(userId) {
            fetch(`/Message/GetConversation?userId=${userId}`)
                .then(response => response.json())
                .then(data => {
                    const messages = data.messages;
                    const messagesHtml = messages.map(message => `
                        <div class="message-bubble ${message.senderId === currentUserId ? 'message-sent' : 'message-received'}">
                            ${message.projectId ? `
                                <div class="small text-${message.senderId === currentUserId ? 'light' : 'muted'} mb-1">
                                    <i class="bi bi-folder me-1"></i>${message.projectName || 'Project'}
                                </div>
                            ` : ''}
                            <div class="message-content">${message.content}</div>
                            <div class="small text-${message.senderId === currentUserId ? 'light' : 'muted'} mt-1">
                                ${message.createdAt}
                            </div>
                        </div>
                    `).join('');

                    const content = document.getElementById('conversationContent');
                    content.innerHTML = `
                        <div class="conversation-header p-3 border-bottom">
                            <h5 class="mb-0">Conversation</h5>
                        </div>
                        <div class="conversation-messages p-3 flex-grow-1" style="overflow-y: auto;">
                            ${messagesHtml}
                        </div>
                        <div class="conversation-input p-3 border-top">
                            <form id="messageForm" class="needs-validation" novalidate>
                                <input type="hidden" name="receiverId" value="${userId}" />
                                <div class="input-group">
                                    <textarea name="content" class="form-control" rows="1" 
                                            placeholder="Type a message..." required></textarea>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-send"></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                    `;

                    // Scroll to bottom
                    const messagesContainer = content.querySelector('.conversation-messages');
                    messagesContainer.scrollTop = messagesContainer.scrollHeight;

                    // Add form submission handler
                    const form = document.getElementById('messageForm');
                    form.addEventListener('submit', async function (event) {
                        event.preventDefault();
                        
                        if (!form.checkValidity()) {
                            event.stopPropagation();
                            form.classList.add('was-validated');
                            return;
                        }

                        const formData = new FormData(form);
                        try {
                            const response = await fetch('/Message/SendMessage', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                },
                                body: new URLSearchParams(formData),
                            });

                            if (response.ok) {
                                form.reset();
                                form.classList.remove('was-validated');
                                refreshConversation(userId);
                            } else {
                                console.error('Failed to send message');
                            }
                        } catch (error) {
                            console.error('Error sending message:', error);
                        }
                    });
                })
                .catch(error => {
                    console.error('Error loading conversation:', error);
                    content.innerHTML = `
                        <div class="conversation-header p-3 border-bottom">
                            <h5 class="mb-0">Error</h5>
                        </div>
                        <div class="conversation-messages p-3 flex-grow-1">
                            <div class="alert alert-danger">
                                Failed to load conversation. Please try again.
                            </div>
                        </div>
                    `;
                });
        }

        // Auto-refresh conversation every 10 seconds
        setInterval(() => {
            if (currentUserId) {
                refreshConversation(currentUserId);
            }
        }, 10000);
    </script>

    <style>
        .avatar-circle {
            width: 40px;
            height: 40px;
            background-color: #0d6efd;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .conversation-item:hover {
            background-color: #f8f9fa;
        }

        .conversation-item.active {
            background-color: #e9ecef;
        }

        .message-bubble {
            max-width: 75%;
            padding: 10px 15px;
            border-radius: 15px;
            margin-bottom: 10px;
        }

        .message-sent {
            background-color: #0d6efd;
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 5px;
        }

        .message-received {
            background-color: #f8f9fa;
            border-bottom-left-radius: 5px;
        }
    </style>
}