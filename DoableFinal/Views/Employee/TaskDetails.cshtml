@model DoableFinal.Models.ProjectTask
@using System.IO

@{
    ViewData["Title"] = "Task Details";
    var dateFormat = "MMM dd, yyyy";
    var dateTimeFormat = "MMM dd, yyyy HH:mm";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Task Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Employee" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-controller="Employee" asp-action="Tasks">My Tasks</a></li>
        <li class="breadcrumb-item active">Task Details</li>
    </ol>

    <div class="row">
        <div class="col-xl-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-tasks me-1"></i>
                        Task Information
                    </div>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Title</h5>
                    <p class="card-text">@Model.Description</p>
                    
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <p><strong>Status:</strong> 
                                <span class="badge bg-@(Model.Status switch {
                                    "Not Started" => "secondary",
                                    "In Progress" => "primary",
                                    "On Hold" => "warning",
                                    "Completed" => "success",
                                    _ => "secondary"
                                })">@Model.Status</span>
                            </p>
                            <p><strong>Priority:</strong> 
                                <span class="badge bg-@(Model.Priority switch {
                                    "Low" => "info",
                                    "Medium" => "warning",
                                    "High" => "danger",
                                    _ => "secondary"
                                })">@Model.Priority</span>
                            </p>
                            <p><strong>Start Date:</strong> @Model.StartDate.ToString(dateFormat)</p>
                            
                            @if (Model.Status != "Completed" || !Model.IsConfirmed)
                            {
                                <div class="mt-4">
                                    <h6>Submit Proof of Completion</h6>
                                    <form asp-action="SubmitTaskProof" asp-controller="Employee" method="post" enctype="multipart/form-data">
                                        <input type="hidden" name="taskId" value="@Model.Id" />
                                        <div class="mb-3">
                                            <input type="file" class="form-control" name="proofFile" required @(Model.Status == "Pending Approval" || Model.Status == "Completed" ? "disabled" : "") />
                                            <small class="text-muted">Upload file as proof of task completion</small>
                                        </div>
                                        <button type="submit" class="btn btn-primary" @(Model.Status == "Pending Approval" || Model.Status == "Completed" ? "disabled" : "")>Submit for Approval</button>
                                    </form>
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.ProofFilePath))
                            {
                                <div class="mt-3">
                                    <h6>Submitted Proof</h6>
                                    <p>
                                        <a href="@Url.Action("DownloadProof", "Employee", new { taskId = Model.Id })" class="btn btn-sm btn-secondary">
                                            <i class="fas fa-download"></i> Download Proof File
                                        </a>
                                    </p>
                                    <p>
                                        <strong>Status:</strong>
                                        @if (Model.IsConfirmed)
                                        {
                                            <span class="badge bg-success">Approved</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">Pending Approval</span>
                                        }
                                    </p>
                                </div>
                            }
                        </div>
                        <div class="col-md-6">
                            <p><strong>Project:</strong> 
                                <a asp-controller="Employee" asp-action="ProjectDetails" asp-route-id="@Model.ProjectId">
                                    @Model.Project.Name
                                </a>
                            </p>
                            <p><strong>Created By:</strong> @Model.CreatedBy?.FirstName @Model.CreatedBy?.LastName</p>
                            <p><strong>Created At:</strong> @Model.CreatedAt.ToString(dateTimeFormat)</p>
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <p><strong>Last Updated:</strong> @Model.UpdatedAt.Value.ToString(dateTimeFormat)</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Assigned Employees -->
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-users me-1"></i>
                    Assigned Employees
                </div>
                <div class="card-body">
                    @if (Model.TaskAssignments != null && Model.TaskAssignments.Any())
                    {
                        <ul class="list-group">
                            @foreach (var assignment in Model.TaskAssignments)
                            {
                                <li class="list-group-item">
                                    <strong>@assignment.Employee.FirstName @assignment.Employee.LastName</strong>
                                    <br />
                                    <small class="text-muted">@assignment.Employee.Email</small>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No employees assigned to this task.</p>
                    }
                </div>
            </div>

            <!-- Task Timeline -->
            <partial name="_TaskTimeline" model="Model" />

            <!-- Comments Section -->
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-comments me-1"></i>
                    Comments
                </div>
                <div class="card-body">
                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                        {
                            <div class="d-flex mb-3">
                                <div class="flex-shrink-0">
                                    <div class="avatar-circle">
                                        <span class="initials">
                                            @(comment.CreatedBy?.FirstName?.FirstOrDefault() ?? 'U')
                                            @(comment.CreatedBy?.LastName?.FirstOrDefault() ?? 'S')
                                        </span>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-1">
                                            @(comment.CreatedBy?.FirstName ?? "Unknown") @(comment.CreatedBy?.LastName ?? "User")
                                        </h6>
                                        <small class="text-muted">@comment.CreatedAt.ToString(dateTimeFormat)</small>
                                    </div>
                                    <p class="mb-1">@comment.CommentText</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No comments yet.</p>
                    }

                    <form asp-action="AddComment" method="post" class="mt-4">
                        <input type="hidden" name="taskId" value="@Model.Id" />
                        <div class="mb-3">
                            <textarea name="commentText" class="form-control" rows="3" placeholder="Add a comment..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Post Comment</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        background-color: #0d6efd;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .initials {
        color: white;
        font-size: 14px;
        font-weight: bold;
    }
</style>